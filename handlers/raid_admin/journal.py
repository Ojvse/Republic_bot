from utils.safe_send import safe_answer
from aiogram import Router, F
from aiogram.types import Message
from sqlalchemy import func
from database.db import session
from database.models import RaidPinSendLog, User

router = Router()


@router.message(F.text == "üìí –ñ—É—Ä–Ω–∞–ª –ø–∏–Ω–æ–≤")
async def view_pin_send_log(message: Message):
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã RaidPinSendLog:
    # - –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∞–¥–º–∏–Ω—É –∏ —Ç–µ–∫—Å—Ç—É –ø–∏–Ω–∞
    # - –î–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã –ø–æ–ª—É—á–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–∞—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏ (–≤—Ä–µ–º—è –ø–µ—Ä–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏)
    # - –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
    # - –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å–Ω–∞—á–∞–ª–∞ —Å–∞–º—ã–µ –Ω–æ–≤—ã–µ)
    # - –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç 10 –∑–∞–ø–∏—Å—è–º–∏
    grouped_logs = (
        session.query(
            RaidPinSendLog.admin_id,
            RaidPinSendLog.pin_text,
            func.min(RaidPinSendLog.sent_at).label("sent_at"),
            func.count(RaidPinSendLog.target_id).label("recipients_count")
        )
        .group_by(RaidPinSendLog.admin_id, RaidPinSendLog.pin_text)
        .order_by(func.min(RaidPinSendLog.sent_at).desc())
        .limit(10)
        .all()
    )

    if not grouped_logs:
        # –ï—Å–ª–∏ –∂—É—Ä–Ω–∞–ª –ø—É—Å—Ç ‚Äî —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        await safe_answer(message, "üì≠ –ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç.")
        return

    # –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç: –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ª–µ–≥–µ–Ω–¥—É
    lines = [
        "üìí <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏–Ω–æ–≤:</b>\n"
        "‚ÑπÔ∏è <b>–û–±–æ–∑–Ω–∞—á–µ–Ω–∏—è:</b>\n"
        "üõ° ‚Äî –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –ø–∏–Ω–∞ (–∞–¥–º–∏–Ω)\n"
        "üïì ‚Äî –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏\n"
        "üë• ‚Äî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π\n"
        "üì© ‚Äî –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∏–Ω–∞\n"
        "üìç ‚Äî –õ–æ–∫–∞—Ü–∏—è\n"
        ""
    ]

    # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞
    for i, log in enumerate(grouped_logs, start=1):
        # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ –µ–≥–æ ID
        admin = session.query(User).filter_by(game_id=log.admin_id).first()
        admin_name = admin.nickname if admin else f"id:{log.admin_id}"

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏
        time = log.sent_at.strftime('%d.%m %H:%M')

        # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –ø–∏–Ω–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –æ—á–∏—â–∞–µ–º –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
        pin_lines = [line.strip() for line in log.pin_text.splitlines() if line.strip()]
        title = pin_lines[0] if len(pin_lines) > 0 else "-"  # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        location = pin_lines[1] if len(pin_lines) > 1 else "-"  # –õ–æ–∫–∞—Ü–∏—è
        body = " ".join(pin_lines[2:]) if len(pin_lines) > 2 else "-"  # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
        if len(body) > 150:
            body = body[:147] + "..."  # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∏–Ω–µ
        lines.append(
            f"{i}. üõ° <b>{admin_name}</b> | üïì {time} | üë• {log.recipients_count}\n"
            f"    üì© <b>{title}</b>\n"
            f"    {location}\n"
            f"    {body}"
        )

    # –°–∫–ª–µ–∏–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    text = "\n\n".join(lines)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    await safe_answer(message, text, parse_mode="HTML")
