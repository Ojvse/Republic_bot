from datetime import datetime, timedelta

from sqlalchemy import func

from utils.safe_send import safe_answer, safe_send_message
from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from services.navigation import return_to_main_menu
from keyboards.admin_menu import full_admin_menu
from database.db import session
from database.models import RaidEvent, RaidParticipation, User, RaidPinData

router = Router()

@router.message(F.text == "‚öîÔ∏è –†–µ–π–¥—ã")
async def open_raid_menu(message: Message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–µ–π–¥–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await safe_answer(message,
        "üìÖ –ú–µ–Ω—é —Ä–µ–π–¥–æ–≤:\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ —Ä–µ–π–¥—ã –∏ —Å–≤–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π.",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üìÖ –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Ä–µ–π–¥—ã"), KeyboardButton(text="üìä –ú–æ—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")],
                [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
            ],
            resize_keyboard=True
        )
    )


@router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def back_to_admin_from_raid(message: Message):
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—Ä–∞—Ç–Ω–æ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é
    await safe_answer(message, "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=full_admin_menu())


@router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back_from_anywhere(message: Message):
    # –û–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await return_to_main_menu(message)


@router.message(F.text == "üìã –°–ø–∏—Å–æ–∫ —Ä–µ–π–¥–æ–≤")
async def list_recent_raids(message: Message):
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ä–µ–π–¥–æ–≤ –∏–∑ –ë–î, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –¥–∞—Ç–µ (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ)
    raids = (
        session.query(RaidEvent)
        .order_by(RaidEvent.start_time.desc())
        .limit(10)
        .all()
    )

    if not raids:
        # –ï—Å–ª–∏ —Ä–µ–π–¥–æ–≤ –Ω–µ—Ç ‚Äî —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        await safe_answer(message, "‚ùå –ù–µ—Ç —Ä–µ–π–¥–æ–≤.")
        return

    lines = []
    for raid in raids:
        dt = raid.start_time.strftime('%d.%m %H:%M')
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞–∂–¥–æ–º —Ä–µ–π–¥–µ
        lines.append(f"‚Ä¢ <b>{raid.name}</b> ‚Äî {dt} | üë• {raid.squad} | ID: {raid.id}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–π–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await safe_answer(message, "<b>üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–π–¥—ã:</b>\n\n" + "\n".join(lines), parse_mode="HTML")


@router.message(F.text == "üìÖ –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Ä–µ–π–¥—ã")
async def show_upcoming_raids(message: Message):
    now = datetime.utcnow()  # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    # –ü–æ–ª—É—á–∞–µ–º –¥–æ 10 –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—É–¥—É—â–∏—Ö —Ä–µ–π–¥–æ–≤
    raids = (
        session.query(RaidEvent)
        .filter(RaidEvent.start_time >= now, RaidEvent.status == "active")  # –¢–æ–ª—å–∫–æ –±—É–¥—É—â–∏–µ –∏ –∞–∫—Ç–∏–≤–Ω—ã–µ
        .order_by(RaidEvent.start_time.asc())  # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (—Å–Ω–∞—á–∞–ª–∞ –±–ª–∏–∂–∞–π—à–∏–µ)
        .limit(10)  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 10
        .all()
    )

    if not raids:
        # –ï—Å–ª–∏ —Ä–µ–π–¥–æ–≤ –Ω–µ—Ç ‚Äî —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        await safe_answer(message, "‚ùå –ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–π–¥–æ–≤.")
        return

    user = session.query(User).filter_by(game_id=message.from_user.id).first()

    for raid in raids:
        dt = raid.start_time.strftime("%d.%m %H:%M")

        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞—Ç—É—Å ‚Äî –Ω–µ –≤—ã–±—Ä–∞–Ω–æ
        part_status = "‚ùî –ù–µ –≤—ã–±—Ä–∞–Ω–æ"
        join_text = "‚öî –Ø –∏–¥—É!"
        leave_text = "üö´ –û—Ç–º–µ–Ω–∏—Ç—å"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user:
            part = session.query(RaidParticipation).filter_by(raid_id=raid.id, user_id=user.id).first()
            if part:
                if part.status == "–∑–∞–ø–∏—Å–∞–ª—Å—è":
                    part_status = "‚öî –ó–∞–ø–∏—Å–∞–ª—Å—è"
                    join_text = "‚öî –í—ã –∑–∞–ø–∏—Å–∞–Ω—ã"
                    leave_text = "üö´ –Ø –Ω–µ –∏–¥—É"
                elif part.status == "–æ—Ç–∫–∞–∑–∞–ª—Å—è":
                    part_status = "üö´ –û—Ç–∫–∞–∑–∞–ª—Å—è"
                    join_text = "‚öî –Ø –∏–¥—É!"
                    leave_text = "üö´ –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å"

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∏–Ω–∞
        pin_data = session.query(RaidPinData).filter_by(raid_id=raid.id).first()

        title = pin_data.title if pin_data else raid.name
        km = pin_data.km if pin_data else "–ù–µ —É–∫–∞–∑–∞–Ω"
        description = pin_data.description if pin_data else ""

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ–π–¥–µ
        text = (
            f"‚è≥ <b>–†–µ–π–¥:</b> {raid.name}\n"
            f"<b>{title}</b>\n"
            f"–¢–æ—á–∫–∞ —Å–±–æ—Ä–∞:üìç {km} –∫–º\n"
            f"{description}\n"
            f"üïî <b>–í—Ä–µ–º—è:</b> {dt}\n"
            f"üéØ <b>–ë–∞–Ω–¥–∞:</b> {raid.squad or '–ù–µ—Ç'}\n"
            f"üìå <b>–í–∞—à —Å—Ç–∞—Ç—É—Å:</b> {part_status}"
        )

        # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text=join_text, callback_data=f"raid_join_{raid.id}"),
                InlineKeyboardButton(text=leave_text, callback_data=f"raid_leave_{raid.id}")
            ],
            [
                InlineKeyboardButton(text="üîî –ù–∞–ø–æ–º–Ω–∏—Ç—å", callback_data=f"remind_{raid.id}")
            ]
        ])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–π–¥–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await message.answer(text, parse_mode="HTML", reply_markup=kb)


@router.message(F.text == "üìä –ú–æ—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")
async def my_raid_stats(message: Message):
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    user = session.query(User).filter_by(game_id=message.from_user.id).first()
    if not user:
        await safe_answer(message, "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
        return

    now = datetime.utcnow()
    week_ago = now - timedelta(days=7)  # –í—Ä–µ–º—è –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥

    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    count = (
        session.query(func.count(RaidParticipation.id))
        .join(RaidEvent, RaidParticipation.raid_id == RaidEvent.id)
        .filter(RaidParticipation.user_id == user.id)
        .filter(RaidEvent.start_time >= week_ago)
        .scalar()
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    await safe_answer(message, f"üìä –í—ã —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ <b>{count}</b> —Ä–µ–π–¥–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π.", parse_mode="HTML")
