from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from database.db import session
from database.models import User, PlayerProfile
from handlers.info import format_user_info
from keyboards.cancel import cancel_keyboard
from keyboards.info_menu import info_menu_keyboard
from keyboards.main_menu import main_menu_keyboard
from services.profile_parser_full import parse_full_profile, extract_nickname_and_game_id
from states.info_states import InfoUpdate
from utils.safe_send import safe_answer

router = Router()


@router.message(StateFilter(None), F.text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ")
async def open_info_menu(message: Message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –æ—Ç–ø—Ä–∞–≤–ª—è—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await safe_answer(message, "üßæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=info_menu_keyboard())


@router.message(StateFilter(None), F.text == "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
async def update_request(message: Message, state: FSMContext):
    # –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ –∏–≥—Ä—ã
    await state.clear()
    await state.update_data(from_menu="info")
    await safe_answer(message, "üì© –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å—é–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–≥—Ä–æ–≤—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º (–∏–∑ üìü–ü–∏–ø-–±–æ–π /me) :", reply_markup=cancel_keyboard())
    await state.set_state(InfoUpdate.awaiting_profile)


@router.message(InfoUpdate.awaiting_profile)
async def handle_profile_forward(message: Message, state: FSMContext):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–≥—Ä–æ–≤—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º
    if message.text and (message.text or "").lower() in ["–æ—Ç–º–µ–Ω–∞", "/cancel"]:
        from handlers.fsm_cancel import cancel_fsm
        await cancel_fsm(message, state)
        return

    extracted = extract_nickname_and_game_id(message)
    if not extracted:
        await safe_answer(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –û—Ç–º–µ–Ω–∞.")
        return

    profile_nick, game_id = extracted
    user = session.query(User).filter_by(game_id=game_id).first()

    if not user:
        await safe_answer(message, "‚ùå –ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º ID –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        await state.clear()
        return

    await parse_full_profile(message, silent=True)

    if user.nickname.strip().lower() != profile_nick.strip().lower():
        await safe_answer(message,
                          f"‚ö†Ô∏è –í–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫ <b>{profile_nick}</b> –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º <b>{user.nickname}</b>."
                          f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                          parse_mode="HTML"
                          )
    else:
        await safe_answer(message, "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω.")

    await state.clear()
    await open_info_menu(message)


@router.message(F.text.in_(["üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", "üë§ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å"]))
async def show_my_profile(message: Message):
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = session.query(User).filter_by(game_id=message.from_user.id).first()
    if not user:
        await safe_answer(message, "‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
        return

    profile = session.query(PlayerProfile).filter_by(game_id=user.game_id).first()
    if not profile:
        await safe_answer(message, "‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.")
        return

    await safe_answer(message, format_user_info(user), parse_mode="HTML")


@router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back_to_main(message: Message, state: FSMContext):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await state.clear()
    await safe_answer(message, "‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu_keyboard())
