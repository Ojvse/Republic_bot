from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from sqlalchemy.exc import IntegrityError

from config import ADMIN_IDS
from database.db import session
from database.models import User, PlayerProfile
from handlers.fsm_cancel import cancel_fsm
from keyboards.admin_menu import user_admin_menu, full_admin_menu, guidepage_admin_menu
from keyboards.cancel import cancel_keyboard
from keyboards.edit_user import skip_or_cancel_keyboard
from keyboards.location_menu import location_admin_menu
from keyboards.main_menu import main_menu_keyboard
from keyboards.raid_menu import raid_admin_menu
from services.profile_parser_full import parse_full_profile
from states.user_states import AddUser, EditUser
from utils.safe_send import safe_answer

router = Router()


@router.message(F.text == "/access")
async def access_menu(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–æ–º
    if message.from_user.id not in ADMIN_IDS:
        await safe_answer(message, "‚ùå –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø–æ–º.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    admins = session.query(User).filter_by(is_admin=True).order_by(User.nickname).all()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if not admins:
        admin_list = "‚õîÔ∏è –ü–æ–∫–∞ –Ω–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑–µ."
    else:
        admin_list = "\n".join([f"‚Ä¢ {u.nickname} ({u.game_id})" for u in admins])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏
    await safe_answer(message,
                      f"üõ° <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏</b>\n\n"
                      f"{admin_list}\n\n"
                      f"–ö–æ–º–∞–Ω–¥—ã:\n"
                      f"‚Ä¢ <code>/set_admin game_id</code> ‚Äî –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø\n"
                      f"‚Ä¢ <code>/unset_admin game_id</code> ‚Äî —Å–Ω—è—Ç—å –¥–æ—Å—Ç—É–ø",
                      parse_mode="HTML"
                      )


@router.message(F.text.in_(["üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", "üõ† –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", "/admins_menu"]))
async def admin_panel(message: Message):
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –Ω–µ–≥–æ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    user_id = message.from_user.id
    user = session.query(User).filter_by(game_id=user_id).first()
    if user_id not in ADMIN_IDS and not (user and user.is_admin):
        await safe_answer(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Å –º–µ–Ω—é
    await safe_answer(message, "üõ† <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=full_admin_menu(),
                      parse_mode="HTML")


@router.message(lambda m: m.text and m.text.startswith("/list_admins"))
async def list_admins(message: Message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ–ª—å–∫–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
    if message.from_user.id not in ADMIN_IDS:
        await safe_answer(message, "‚ùå –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    admins = session.query(User).filter_by(is_admin=True).order_by(User.nickname).all()

    # –ï—Å–ª–∏ –∞–¥–º–∏–Ω–æ–≤ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not admins:
        await safe_answer(message, "‚õîÔ∏è –í –±–∞–∑–µ –ø–æ–∫–∞ –Ω–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
    text = "<b>üìã –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</b>\n"
    text += "\n".join([f"‚Ä¢ {u.nickname} ‚Äî <code>{u.game_id}</code>" for u in admins])
    await safe_answer(message, text, parse_mode="HTML")


@router.message(lambda m: m.text and m.text.startswith("/admin_help"))
async def admin_help(message: Message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É
    user_id = message.from_user.id
    user = session.query(User).filter_by(game_id=user_id).first()

    if user_id not in ADMIN_IDS and not (user and user.is_admin):
        await safe_answer(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–ø—Ä–∞–≤–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    text = (
        "<b>üõ° –°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤</b>\n\n"
        "üìå <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:</b>\n"
        "‚Ä¢ /add_user ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤—Ä—É—á–Ω—É—é\n"
        "‚Ä¢ /add_user_forward ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∏–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
        "‚Ä¢ /edit_user &lt;id&gt; ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –∏–≥—Ä–æ–∫–∞\n"
        "‚Ä¢ /remove_user &lt;id&gt; ‚Äî —É–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞\n"
        "‚Ä¢ /list_users [—Å—Ç—Ä–∞–Ω–∏—Ü–∞] ‚Äî —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤\n"
        "‚Ä¢ /info [id/–Ω–∏–∫] ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞\n\n"
        "üìå <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏:</b>\n"
        "‚Ä¢ /set_admin &lt;id&gt; ‚Äî –≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞\n"
        "‚Ä¢ /unset_admin &lt;id&gt; ‚Äî —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞\n"
        "‚Ä¢ /access ‚Äî —Å–ø–∏—Å–æ–∫ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ\n"
        "‚Ä¢ /list_admins ‚Äî —Ç–µ–∫—É—â–∏–µ –∞–¥–º–∏–Ω—ã\n\n"
        "üìå <b>–†–µ–π–¥—ã:</b>\n"
        "‚Ä¢ /raid_create ‚Äî —Å–æ–∑–¥–∞—Ç—å —Ä–µ–π–¥\n"
        "‚Ä¢ /raid_report ‚Äî –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ 7 –¥–Ω–µ–π\n"
        "‚Ä¢ /report ‚Äî –ø–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å –æ—Ç—á—ë—Ç–æ–≤\n\n"
        "üìå <b>–ì–∞–π–¥—ã:</b>\n"
        "‚Ä¢ /guide ‚Äî –º–µ–Ω—é –≥–∞–π–¥–æ–≤\n"
        "‚Ä¢ /add_guide ‚Äî –¥–æ–±–∞–≤–∏—Ç—å\n"
        "‚Ä¢ /remove_guide ‚Äî —É–¥–∞–ª–∏—Ç—å\n"
        "‚Ä¢ /edit_guide ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n\n"
        "üìå <b>–õ–æ–∫–∞—Ü–∏–∏:</b>\n"
        "‚Ä¢ /loc_&lt;–∫–º&gt; ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, /loc_13)\n"
        "‚Ä¢ !&lt;–∫–º&gt; ‚Äî –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, !13)\n\n"
        "üß© <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>\n"
        "‚Ä¢ /backup_db ‚Äî —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è\n"
        "‚Ä¢ /admin_help ‚Äî —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–∫—É
    await safe_answer(message, text, parse_mode="HTML")


@router.message(F.text.startswith("/list_users"))
async def list_users(message: Message):
    # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    parts = message.text.strip().split()
    page = int(parts[1]) if len(parts) == 2 and parts[1].isdigit() else 1
    page_size = 20  # –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    offset = (page - 1) * page_size  # –°–¥–≤–∏–≥ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    total_users = session.query(User).count()

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    users = session.query(User).order_by(User.nickname).offset(offset).limit(page_size).all()

    if not users:
        await safe_answer(message, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")
        return

    lines = []
    for u in users:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–æ–º
        profile = session.query(PlayerProfile).filter_by(game_id=u.game_id).first()
        note = ""
        if profile and profile.added_by_admin:
            admin = None
            if profile.added_by_admin_id:
                admin = session.query(User).filter_by(game_id=profile.added_by_admin_id).first()
            if admin:
                note = f"‚ö†Ô∏è –¥–æ–±–∞–≤–ª–µ–Ω {admin.nickname}"
            else:
                note = "‚ö†Ô∏è –¥–æ–±–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–æ–º"
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        lines.append(f"‚Ä¢ {u.game_id} ‚Äî {u.nickname} {note}".strip())

    # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    total_pages = (total_users + page_size - 1) // page_size

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await safe_answer(
        message,
        f"üìã <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (—Å—Ç—Ä. {page}/{total_pages}):</b>\n" + "\n".join(lines),
        parse_mode="HTML"
    )

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Äî –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥
    if page < total_pages:
        await safe_answer(message, f"‚û°Ô∏è –î–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: /list_users {page + 1}")


@router.message(F.text == "/add_user_forward")
async def add_user_forward(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–ø–ª–∞–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not message.reply_to_message or not message.reply_to_message.text:
        await safe_answer(message, "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∏–ø-–±–æ–µ–º.")
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –∏ ID –∏–∑ —Ä–µ–ø–ª–∞—è
    from services.profile_parser_full import extract_nickname_and_game_id
    result = extract_nickname_and_game_id(message.reply_to_message)
    if not result:
        await safe_answer(message, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–∏–ø-–±–æ–π.")
        return

    nickname, game_id = result

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    existing = session.query(User).filter_by(game_id=game_id).first()
    if existing:
        await safe_answer(message, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω.")
        return

    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = User(game_id=game_id, nickname=nickname)
    session.add(user)
    session.commit()

    # –ü–∞—Ä—Å–∏–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ —Ä–µ–ø–ª–∞—è
    await parse_full_profile(message.reply_to_message, added_by_admin=True)

    await safe_answer(message, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nickname} –¥–æ–±–∞–≤–ª–µ–Ω (ID: {game_id}).")


@router.message(F.text == "/add_user")
async def cmd_add_user(message: Message, state: FSMContext):
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    await state.clear()
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—ã–∑–æ–≤–∞ (–∞–¥–º–∏–Ω-–º–µ–Ω—é)
    await state.update_data(from_menu="admin")
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –∏–≥—Ä–æ–∫–∞
    await safe_answer(message, "–í–≤–µ–¥–∏—Ç–µ ID –∏–≥—Ä–æ–∫–∞:", reply_markup=cancel_keyboard())
    await state.set_state(AddUser.game_id)


@router.message(AddUser.game_id)
async def add_game_id(message: Message, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É
    if (message.text or "").lower() in ["–æ—Ç–º–µ–Ω–∞", "/cancel"]:
        await cancel_fsm(message, state)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º
    if not message.text.isdigit():
        await safe_answer(message, "‚ùó ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:",
                          reply_markup=cancel_keyboard())
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∏–∫–Ω–µ–π–º
    await state.update_data(game_id=int(message.text))
    await safe_answer(message, "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫:", reply_markup=cancel_keyboard())
    await state.set_state(AddUser.nickname)


@router.message(AddUser.nickname)
async def add_nickname(message: Message, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É –≤–≤–æ–¥–∞
    if (message.text or "").lower() in ["–æ—Ç–º–µ–Ω–∞", "/cancel"]:
        await cancel_fsm(message, state)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.update_data(nickname=message.text)

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–æ–ª—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await safe_answer(message, "–í–≤–µ–¥–∏—Ç–µ —Ä–æ–ª—å:", reply_markup=cancel_keyboard())
    await state.set_state(AddUser.role)


@router.message(AddUser.role)
async def add_role(message: Message, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É –≤–≤–æ–¥–∞
    if (message.text or "").lower() in ["–æ—Ç–º–µ–Ω–∞", "/cancel"]:
        await cancel_fsm(message, state)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.update_data(role=message.text)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ FSM
    data = await state.get_data()

    # –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    required_fields = ["game_id", "nickname", "role"]
    missing = [f for f in required_fields if f not in data]
    if missing:
        # –ï—Å–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –ø–æ–ª—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã ‚Äî —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        await safe_answer(message, f"‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö: {', '.join(missing)}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞.")
        await state.clear()
        return

    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = User(
        game_id=data["game_id"],
        nickname=data["nickname"],
        role=data["role"]
    )
    session.add(user)

    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        session.commit()
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
        await safe_answer(message,
                          f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{user.nickname}</b> –¥–æ–±–∞–≤–ª–µ–Ω.",
                          reply_markup=full_admin_menu(),
                          parse_mode="HTML"
                          )
    except IntegrityError:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ID
        session.rollback()
        await safe_answer(message, "‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    await state.clear()


@router.message(F.text.startswith("/edit_user"))
async def cmd_edit_user(message: Message, state: FSMContext):
    # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    parts = message.text.strip().split()
    if len(parts) != 2 or not parts[1].isdigit():
        await safe_answer(message, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /edit_user &lt;game_id&gt;", parse_mode="HTML")
        return

    game_id = int(parts[1])
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    user = session.query(User).filter_by(game_id=game_id).first()
    if not user:
        await safe_answer(message, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ FSM
    await state.update_data(game_id=game_id)
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º
    await safe_answer(message, f"–¢–µ–∫—É—â–∏–π –Ω–∏–∫: {user.nickname}. –ù–æ–≤—ã–π –Ω–∏–∫ –∏–ª–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':",
                      reply_markup=skip_or_cancel_keyboard())
    await state.set_state(EditUser.nickname)


@router.message(EditUser.nickname)
async def edit_nickname(message: Message, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É
    if (message.text or "").lower() in ["–æ—Ç–º–µ–Ω–∞", "/cancel"]:
        await cancel_fsm(message, state)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
    if message.text != "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(nickname=message.text)

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ñ—Ä–∞–∫—Ü–∏—é
    await safe_answer(message, "–§—Ä–∞–∫—Ü–∏—è –∏–ª–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':", reply_markup=skip_or_cancel_keyboard())
    await state.set_state(EditUser.faction)


@router.message(EditUser.faction)
async def edit_faction(message: Message, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É
    if (message.text or "").lower() in ["–æ—Ç–º–µ–Ω–∞", "/cancel"]:
        await cancel_fsm(message, state)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é —Ñ—Ä–∞–∫—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞
    if message.text != "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(faction=message.text)

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –±–∞–Ω–¥—É
    await safe_answer(message, "–ë–∞–Ω–¥–∞ –∏–ª–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':", reply_markup=skip_or_cancel_keyboard())
    await state.set_state(EditUser.squad)


@router.message(EditUser.squad)
async def edit_squad(message: Message, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É
    if (message.text or "").lower() in ["–æ—Ç–º–µ–Ω–∞", "/cancel"]:
        await cancel_fsm(message, state)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –±–∞–Ω–¥—É, –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞
    if message.text != "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(squad=message.text)

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–æ–ª—å
    await safe_answer(message, "–†–æ–ª—å –∏–ª–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':", reply_markup=skip_or_cancel_keyboard())
    await state.set_state(EditUser.role)


@router.message(EditUser.role)
async def edit_role(message: Message, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É
    if (message.text or "").lower() in ["–æ—Ç–º–µ–Ω–∞", "/cancel"]:
        await cancel_fsm(message, state)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é —Ä–æ–ª—å, –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞
    if message.text != "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(role=message.text)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ FSM
    data = await state.get_data()
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    user = session.query(User).filter_by(game_id=data["game_id"]).first()
    if not user:
        await safe_answer(message, "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await state.clear()
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã
    if "nickname" in data:
        user.nickname = data["nickname"]
    if "faction" in data:
        user.faction = data["faction"]
    if "squad" in data:
        user.squad = data["squad"]
    if "role" in data:
        user.role = data["role"]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î
    session.commit()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
    await safe_answer(message, "‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã.", reply_markup=full_admin_menu())
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    await state.clear()


@router.message(F.text.startswith("/remove_user"))
async def cmd_remove_user(message: Message):
    # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    parts = message.text.strip().split()
    if len(parts) != 2 or not parts[1].isdigit():
        await safe_answer(message, "‚ùó –í–≤–µ–¥–∏—Ç–µ ID –∫–∞–∫ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: /remove_user 123456")
        return

    game_id = int(parts[1])
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    user = session.query(User).filter_by(game_id=game_id).first()
    if not user:
        await safe_answer(message, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    session.delete(user)
    session.commit()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏
    await safe_answer(message, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω.")


@router.message(F.text.startswith("/set_admin"))
async def set_admin(message: Message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É
    if message.from_user.id not in ADMIN_IDS:
        await safe_answer(message, "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –ø—Ä–∞–≤–∞.")
        return

    # –†–∞–∑–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—É
    parts = message.text.strip().split()
    if len(parts) != 2 or not parts[1].isdigit():
        await safe_answer(message, "‚ùó –í–≤–µ–¥–∏—Ç–µ ID –∫–∞–∫ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: /set_admin 123456")
        return

    game_id = int(parts[1])
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    user = session.query(User).filter_by(game_id=game_id).first()
    if not user:
        await safe_answer(message, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –í—ã–¥–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    user.is_admin = True
    session.commit()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    await safe_answer(message, f"‚úÖ {user.nickname} —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω.")


@router.message(F.text.startswith("/unset_admin"))
async def unset_admin(message: Message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É
    if message.from_user.id not in ADMIN_IDS:
        await safe_answer(message, "‚ùå –¢–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —Å–Ω–∏–º–∞—Ç—å –ø—Ä–∞–≤–∞.")
        return

    # –†–∞–∑–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—É
    parts = message.text.strip().split()
    if len(parts) != 2 or not parts[1].isdigit():
        await safe_answer(message, "‚ùó –í–≤–µ–¥–∏—Ç–µ ID –∫–∞–∫ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: /unset_admin 123456")
        return

    game_id = int(parts[1])
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    user = session.query(User).filter_by(game_id=game_id).first()
    if not user:
        await safe_answer(message, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –°–Ω–∏–º–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    user.is_admin = False
    session.commit()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    await safe_answer(message, f"üö´ {user.nickname} –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω.")


@router.message(F.text == "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
async def submenu_users(message: Message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    await safe_answer(message, "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:", reply_markup=user_admin_menu())


@router.message(F.text == "üìò –ì–∞–π–¥—ã (—Ä–∞–∑–¥–µ–ª—ã)")
async def open_guidepage_admin(message: Message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–∞–π–¥–∞–º–∏
    await safe_answer(message, "üìò –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –≥–∞–π–¥–æ–≤:", reply_markup=guidepage_admin_menu())


@router.message(F.text == "üìÖ –†–µ–π–¥—ã")
async def submenu_raids(message: Message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–π–¥–∞–º–∏
    await safe_answer(message, "‚öîÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–π–¥–∞–º–∏:", reply_markup=raid_admin_menu())


@router.message(F.text == "‚ùì –°–ø—Ä–∞–≤–∫–∞")
async def submenu_help(message: Message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ –º–µ–Ω—é
    await safe_answer(message, "üìñ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /admin_help")


@router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def back_to_admin_panel(message: Message):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    await safe_answer(message, "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=full_admin_menu())


@router.message(F.text == "‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu(message: Message):
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id
    user = session.query(User).filter_by(game_id=user_id).first()
    is_admin = user_id in ADMIN_IDS or (user and user.is_admin)

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await safe_answer(message,
                      "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                      reply_markup=main_menu_keyboard(is_admin=is_admin)
                      )


@router.message(F.text == "üìç –õ–æ–∫–∞—Ü–∏–∏")
async def submenu_locations(message: Message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏—è–º–∏
    await safe_answer(message, "üìç –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏—è–º–∏:", reply_markup=location_admin_menu())
