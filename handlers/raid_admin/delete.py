from utils.safe_send import safe_answer, safe_send_message
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from database.db import session
from database.models import RaidEvent
from states.raid_states import DeleteRaid
from keyboards.cancel import cancel_keyboard
from services.navigation import return_to_raid_admin_menu

router = Router()


@router.message(F.text == "üóë –£–¥–∞–ª–∏—Ç—å —Ä–µ–π–¥")
async def delete_raid_start(message: Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ä–µ–π–¥–æ–≤ –∏–∑ –ë–î, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ)
    raids = session.query(RaidEvent).order_by(RaidEvent.start_time.desc()).limit(10).all()

    if not raids:
        # –ï—Å–ª–∏ —Ä–µ–π–¥–æ–≤ –Ω–µ—Ç ‚Äî —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        await safe_answer(message, "‚ùå –ù–µ—Ç —Ä–µ–π–¥–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
        return

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–π–¥–∞ –∫ –∏–∫–æ–Ω–∫–µ
    status_icon = {
        "active": "üü¢ –ê–∫—Ç–∏–≤–µ–Ω",
        "finished": "‚úÖ –ó–∞–≤–µ—Ä—à—ë–Ω",
        "cancelled": "‚ùå –û—Ç–º–µ–Ω—ë–Ω"
    }

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–π–¥–æ–≤ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫
    lines = ["üìã <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–π–¥—ã:</b>\n"]
    for r in raids:
        dt = r.start_time.strftime('%d.%m %H:%M')  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞
        lines.append(f"‚Ä¢ <b>ID {r.id}</b>: {r.name} | {r.squad}\n"
                     f"  üïî {dt} | –°—Ç–∞—Ç—É—Å: {status_icon.get(r.status, '‚ùì')}")

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    lines.append("\n‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ <b>ID</b> —Ä–µ–π–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–û—Ç–º–µ–Ω–∞¬ª.")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è ID —Ä–µ–π–¥–∞
    await state.set_state(DeleteRaid.awaiting_raid_id)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–∏ (–¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é)
    await state.update_data(from_menu="raid_admin")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await safe_answer(message, "\n".join(lines), parse_mode="HTML", reply_markup=cancel_keyboard())


@router.message(F.text.lower() == "–æ—Ç–º–µ–Ω–∞")
async def cancel_deletion(message: Message, state: FSMContext):
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
    await safe_answer(message, "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await return_to_raid_admin_menu(message, state)


@router.message(DeleteRaid.awaiting_raid_id)
async def delete_raid_by_id(message: Message, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç ‚Äî —á–∏—Å–ª–æ
    text = message.text.strip()
    if not text.isdigit():
        await safe_answer(message, "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID.")
        return

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π ID –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
    raid_id = int(text)
    # –ò—â–µ–º —Ä–µ–π–¥ –≤ –ë–î
    raid = session.query(RaidEvent).filter_by(id=raid_id).first()

    if not raid:
        # –ï—Å–ª–∏ —Ä–µ–π–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        await safe_answer(message, "‚ùå –†–µ–π–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await state.clear()
        return

    # –£–¥–∞–ª—è–µ–º —Ä–µ–π–¥ –∏–∑ –ë–î
    session.delete(raid)
    session.commit()

    # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
    await safe_answer(message, f"üóë –†–µ–π–¥ <b>{raid.name}</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.", parse_mode="HTML")
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await return_to_raid_admin_menu(message)
