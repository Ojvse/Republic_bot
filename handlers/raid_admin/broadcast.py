from utils.safe_send import safe_answer, safe_send_message
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.filters import StateFilter

from states.raid_states import RaidAlert
from database.db import session
from database.models import User
from keyboards.cancel import cancel_keyboard
from services.navigation import return_to_raid_admin_menu

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "üì¢ –†–∞—Å—Å—ã–ª–∫–∞"
@router.message(F.text == "üì¢ –†–∞—Å—Å—ã–ª–∫–∞")
async def start_broadcast(message: Message, state: FSMContext):
    await state.clear()  # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(from_menu="raid_admin")  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–∏
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    await safe_answer(
        message,
        "üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:",
        reply_markup=cancel_keyboard(),
    )
    await state.set_state(RaidAlert.text)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É ‚Äî –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
@router.message(StateFilter(RaidAlert.text))
async def input_broadcast_content(message: Message, state: FSMContext):
    content = {}

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ)
    if message.photo:
        content["photo_id"] = message.photo[-1].file_id
        content["caption"] = message.caption or ""
    elif message.text:
        content["text"] = message.text.strip()
    else:
        await safe_answer(message, "‚ùó –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é.")
        return

    await state.update_data(content=content)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –±–∞–Ω–¥—ã –∏–∑ –ë–î
    squads = session.query(User.squad).distinct().filter(User.squad.isnot(None)).all()
    squads = [s[0] for s in squads if s[0]]  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–ø–∏—Å–æ–∫

    await state.update_data(squad_choices=squads)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –±–∞–Ω–¥

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –≤—ã–±–æ—Ä–∞ –±–∞–Ω–¥
    lines = [f"{i+1}. {s}" for i, s in enumerate(squads)]
    lines.append("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –±–∞–Ω–¥ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä: 1,3)")
    lines.append("0 ‚Äî –í—Å–µ –±–∞–Ω–¥—ã\n* ‚Äî –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")

    await safe_answer(message, "üéØ –ö–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É:\n" + "\n".join(lines))
    await state.set_state(RaidAlert.target)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏
@router.message(StateFilter(RaidAlert.target))
async def send_broadcast(message: Message, state: FSMContext):
    data = await state.get_data()
    content = data.get("content", {})
    squads = data.get("squad_choices", [])

    raw = message.text.strip()

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if raw == "*":
        users = session.query(User).all()  # –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    elif raw == "0":
        users = session.query(User).filter(User.squad.isnot(None)).all()  # –í—Å–µ —Å –±–∞–Ω–¥–æ–π
    else:
        try:
            indexes = [int(x) for x in raw.split(",")]  # –ü–∞—Ä—Å–∏–º –Ω–æ–º–µ—Ä–∞ –±–∞–Ω–¥
            selected = [squads[i - 1] for i in indexes if 0 < i <= len(squads)]  # –í—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—ã–µ –±–∞–Ω–¥—ã
            if not selected:
                raise ValueError
            users = session.query(User).filter(User.squad.in_(selected)).all()  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±–∞–Ω–¥
        except:
            await safe_answer(message, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ò—Å–ø–æ–ª—å–∑—É–π –Ω–æ–º–µ—Ä–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1,3)")
            return

    count = 0
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ —Å–ø–∏—Å–∫–µ
    for user in users:
        if user.game_id:
            try:
                if "photo_id" in content:
                    # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                    await message.bot.send_photo(
                        chat_id=user.game_id,
                        photo=content["photo_id"],
                        caption=content.get("caption", ""),
                        parse_mode="HTML"
                    )
                else:
                    # –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                    await safe_send_message(
                        bot=message.bot,
                        chat_id=user.game_id,
                        text=content["text"],
                        parse_mode="HTML"
                    )
                count += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
            except Exception as e:
                print(f"[ERROR] –†–∞—Å—Å—ã–ª–∫–∞ {user.nickname}: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏

    # –°–æ–æ–±—â–∞–µ–º –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Ä–∞—Å—Å—ã–ª–∫–∏
    await safe_answer(message, f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ {count} –∏–≥—Ä–æ–∫–∞–º.")
    await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await return_to_raid_admin_menu(message)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
